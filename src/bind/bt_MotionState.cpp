/**
 *
 * MACHINE GENERATED FILE. DO NOT EDIT.
 *
 * Bindings for class btMotionState
 *
 * This file has been generated by dub 2.2.1.
 */
#include "dub/dub.h"
#include "LinearMath/btMotionState.h"


/** virtual btMotionState::~btMotionState()
 * src/vendor/bullet/src/LinearMath/btMotionState.h:27
 */
static int btMotionState__btMotionState(lua_State *L) {
  try {
    DubUserdata *userdata = ((DubUserdata*)dub::checksdata_d(L, 1, "bt.MotionState"));
    if (userdata->gc) {
      btMotionState *self = (btMotionState *)userdata->ptr;
      delete self;
    }
    userdata->gc = false;
    return 0;
  } catch (std::exception &e) {
    lua_pushfstring(L, "__gc: %s", e.what());
  } catch (...) {
    lua_pushfstring(L, "__gc: Unknown exception");
  }
  return dub::error(L);
}

/** virtual void btMotionState::getWorldTransform(btTransform &worldTrans) const =0
 * src/vendor/bullet/src/LinearMath/btMotionState.h:32
 */
static int btMotionState_getWorldTransform(lua_State *L) {
  try {
    btMotionState *self = *((btMotionState **)dub::checksdata(L, 1, "bt.MotionState"));
    btTransform *worldTrans = *((btTransform **)dub::checksdata(L, 2, "bt.Transform"));
    self->getWorldTransform(*worldTrans);
    return 0;
  } catch (std::exception &e) {
    lua_pushfstring(L, "getWorldTransform: %s", e.what());
  } catch (...) {
    lua_pushfstring(L, "getWorldTransform: Unknown exception");
  }
  return dub::error(L);
}

/** virtual void btMotionState::setWorldTransform(const btTransform &worldTrans)=0
 * src/vendor/bullet/src/LinearMath/btMotionState.h:35
 */
static int btMotionState_setWorldTransform(lua_State *L) {
  try {
    btMotionState *self = *((btMotionState **)dub::checksdata(L, 1, "bt.MotionState"));
    btTransform *worldTrans = *((btTransform **)dub::checksdata(L, 2, "bt.Transform"));
    self->setWorldTransform(*worldTrans);
    return 0;
  } catch (std::exception &e) {
    lua_pushfstring(L, "setWorldTransform: %s", e.what());
  } catch (...) {
    lua_pushfstring(L, "setWorldTransform: Unknown exception");
  }
  return dub::error(L);
}



// --=============================================== __tostring
static int btMotionState___tostring(lua_State *L) {
  btMotionState *self = *((btMotionState **)dub::checksdata_n(L, 1, "bt.MotionState"));
  lua_pushfstring(L, "bt.MotionState: %p", self);
  
  return 1;
}

// --=============================================== METHODS

static const struct luaL_Reg btMotionState_member_methods[] = {
  { "__gc"         , btMotionState__btMotionState },
  { "getWorldTransform", btMotionState_getWorldTransform },
  { "setWorldTransform", btMotionState_setWorldTransform },
  { "__tostring"   , btMotionState___tostring },
  { "deleted"      , dub::isDeleted       },
  { NULL, NULL},
};


extern "C" int luaopen_bt_MotionState(lua_State *L)
{
  // Create the metatable which will contain all the member methods
  luaL_newmetatable(L, "bt.MotionState");
  // <mt>

  // register member methods
  dub::fregister(L, btMotionState_member_methods);
  // setup meta-table
  dub::setup(L, "bt.MotionState");
  // <mt>
  return 1;
}
